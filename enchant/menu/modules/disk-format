#!/bin/bash

. ../libmenu

load_partitions() {
  #   Device Boot Start   End    MiB    #blocks   Id  System
  #/dev/sda1   *     0+  9538-  9539-   9767488+  83  Linux
  #/dev/sda2      9538+ 10236-   699-    714892+  82  Linux swap / Solaris

  PARTITIONS=()
  local i=0
  local PART SIZE TYPE
  while read PART _ _ SIZE _ _ TYPE ;do
    [[ "$TYPE" == "Empty" ]] && continue
    SIZE=${SIZE%+}; SIZE=${SIZE%-}
    PARTITIONS[i++]=$PART
    PARTITIONS[i++]="$SIZE MiB, $TYPE"
    # Poor man's pipe: doesn't spawn a subshell.
  done < <(sfdisk -l -uM | grep '^/' )
}

mkfs_command() {
  case $1 in
        ext2)  echo  "mke2fs $2"      ;;
        ext3)  echo  "mke2fs -j $2"   ;;
    reiserfs)  echo  "mkreiserfs $2"  ;;
         xfs)  echo  "mkfs.xfs $2" ;; # ignore existing partition
         jfs)  echo  "mkfs.jfs $2" ;; # ditto
        swap)  echo  "mkswap $2"      ;;
      custom)  echo  "... $2"         ;;
           *)  return 1               ;;
  esac
  return 0
}

function initial() {
  menu_intro "Intro: disk-format" \
"In this menu you will be formatting your disk.
blah blah blather, ignorum ipsorum latin pretend
more junk to get some test text creativity all
gone and this should do"
  STATE=get_part
  return 0
}

function get_part() {
  load_partitions
  menu_central_menu "Partition selection menu" \
           "Select a partition to format or hit 'done'" \
           "${PARTITIONS[@]}" custom "Enter one manually"
  rc=$?
  if [[ $rc == 1 ]] ;then
    STATE=initial
    return 0
  elif [[ $rc == 3 ]] ;then
    STATE=finish
    return 0
  fi

  PARTITION=$ANSWER
  if [[ $PARTITION == custom ]] ;then
    STATE=enter_part
  else
    STATE=get_fstype
  fi
}

function enter_part() {
  menu_inputbox "Enter partition" \
           "Please enter a partition to be formatted (including /dev/)" \
           "/dev/" ||
  {
    STATE=get_part
    return 0
  }
  PARTITION=$ANSWER
  STATE=get_fstype
}

function get_fstype() {
  menu_menu "Filesystem Selection Menu"           \
    "Please select what filesystem to use for $PARTITION"  \
    "ext2"      "Second Extended file system"              \
    "ext3"      "Second Extended journaling file system"   \
    "reiserfs"  "Reiserfs journaling file system"          \
    "xfs"       "XFS journaling file system"               \
    "jfs"       "JFS journaling file system"               \
    "swap"      "Swap partition"                           \
    "custom"    "your call"                                ||
  {
    STATE=get_part
    return 0
  }
  FSTYPE=$ANSWER
  MKFSCMD="$(mkfs_command $FSTYPE $PARTITION)"
  STATE=confirm
}

function confirm() {
  menu_menu "Confirmation Menu"      \
    "Do you want to run the following command:
$MKFSCMD"                            \
    "doit" "Energize!"               \
    "modify" "Let me edit that line" ||
  {
    STATE=get_fstype
    return 0
  }
  if [[ $ANSWER == doit ]] ;then
    STATE=result
  else
    STATE=tunecmd
  fi
}

function tunecmd() {
  menu_inputbox "Alter command" \
           "Alter the command below whatever way you like.
It will be executed as if typed on the command line." \
           "$MKFSCMD" ||
  {
    STATE=confirm
    return 0
  }
  MKFSCMD=$ANSWER
  STATE=confirm
}

function result() {
  echo "Creating filesystem..."
  eval "$MKFSCMD"
  rc=$?
  if [[ $rc == 0 ]] ;then
    echo "mkfs completed successfully. Press enter to continue..."
    read LINE
    STATE=get_part
  else
    cat <<EOF
mkfs failed with exit status $rc. Enter 'cancel' to return
to partition selection, anything else to re-edit the command...
EOF
    read ANSWER
    if [[ $ANSWER == "cancel" ]] ;then
      STATE=get_part
    else
      STATE=tunecmd
    fi
  fi
}

function finish() {
  enchant_setnext
  exit $EXIT_OK
}

menu_loop

#!/bin/bash
# /etc/hwd/hwd-no-autoconfig
# Hardware detect and information how to setup manually.
# Based on Knoppix 3.1 live CD's knoppix-autoconfig
# 29-August-2003 by Markku (Rasatmakananda)<rasat@pacific.net.sg>

[ `id -u` -ne 0 ] && {
     	  echo "This program must be run by the root user"
	  echo "   Login root:"
	  echo "   # su"
	  echo "   # <root password>"
     	  exit 1
}

PATH="/bin:/sbin:/usr/bin:/usr/sbin:/usr/X11R6/bin"
export PATH

umask 022

# Ignore interrupt signals
trap "" 1 2 3 11 15

# ANSI COLORS
CRE="
[K"
NORMAL="[0;39m"
# RED: Failure or error message
RED="[1;31m"
# GREEN: Success message
GREEN="[1;32m"
# YELLOW: Descriptions
YELLOW="[1;33m"
# BLUE: System messages
BLUE="[1;34m"
# MAGENTA: Found devices or drivers
MAGENTA="[1;35m"
# CYAN: Questions
CYAN="[1;36m"
# BOLD WHITE: Hint
WHITE="[1;37m"


if [  -f /etc/X11/XF86Config-4 ]; then
echo "${RED}XF86Config-4 already exists!!!"
echo "${NORMAL}Will not be able to create an accurate sample /etc/X11/XF86Config-4.hwd file."
echo "Press any key to continue..."
read KEY
fi
if [  -f /tmp/.simple ]; then
rm /tmp/.simple
fi

# Select simple or expert mode
another=""; answer=""
while test "$answer" != "s" -a "$answer" != "S"; do
echo "${NORMAL}Select one of the following display modes:"
echo "   ${NORMAL}[S] simple - general hardware info and manual setup guide."
echo "   ${NORMAL}[E] expert - full display; includes devices and modules detected.${NORMAL}"
echo -n "${GREEN}Simple or Expert mode (S/E)? ${NORMAL}[S] "
another=" another"
read answer
case "$answer" in e*|E*)
echo "${NORMAL}Expert mode selected."
echo ""
 break; ;; esac
# If simple mode selected.
echo "${NORMAL}Simple mode selected."
echo ""
echo "" >> /tmp/.simple
break
done

# Read in boot parameters
CMDLINE="$(cat /proc/cmdline)"

# We need /proc here, so mount it in case we skipped the bootfloppy
mount /proc 2>/dev/null

# Utility Function(s)

# Simple shell grep
stringinfile(){
case "$(cat $2)" in *$1*) return 0;; esac
return 1
}

#  same for strings
stringinstring(){
case "$2" in *$1*) return 0;; esac
return 1
}

# Reread boot command line; echo last parameter's argument or return false.
getbootparam(){
stringinstring "$1=" "$CMDLINE" || return 1
result="${CMDLINE##*$1=}"
result="${result%%[ 	]*}"
echo "$result"
return 0
}

# Check boot commandline for specified option
checkbootparam(){
stringinstring "$1" "$CMDLINE"
return "$?"
}

echo "" >> /tmp/.hwd
echo "${YELLOW}Starting hardware detect...${NORMAL}"

# Delete obsolete links and files before starting autoconfig
rm -f /etc/sysconfig/i18n /etc/sysconfig/keyboard /etc/sysconfig/smgl\
      2>/dev/null

# No kernel messages while probing modules
echo "0" > /proc/sys/kernel/printk

# Print CPU info
echo -n "${NORMAL}"
awk -F: '/^processor/{printf " Processor"$2" is "};/^model name/{printf $2};/^vendor_id/{printf vendor};/^cpu MHz/{printf " %dMHz",int($2)};/^cache size/{printf ","$2" Cache"};/^$/{print ""}' /proc/cpuinfo 2>/dev/null
echo -n "${NORMAL}"

# Copy temporary files
if [  -a /etc/X11 ]; then
cp -f /etc/hwd/X11/XF86Config-4.in /etc/X11/
cp -f /etc/hwd/X11/XF86Config.in /etc/X11/
fi

# Delete old XF86Config-4.hwd
if [  -f /etc/X11/XF86Config-4.hwd ]; then
rm /etc/X11/XF86Config-4.hwd
fi

# Support for hotpluggable devices?
HOTPLUG=""

# KNOPPIX autoconfig
# First: PCMCIA Check/Setup
# This needs to be done before other modules are being loaded by hwsetup

if checkbootparam "nopcmcia"; then
echo " ${YELLOW}Skipping PCMCIA detection as requested on boot commandline.${NORMAL}"
else
insmod pcmcia_core >/dev/null 2>&1
# Try Cardbus or normal PCMCIA socket drivers
insmod yenta_socket >/dev/null 2>&1 && HOTPLUG="yes" || insmod i82365 >/dev/null 2>&1 || insmod tcic >/dev/null 2>&1
if [ "$?" != "0" ]
then
# No PCMCIA Bus present.
[ -n "$HOTPLUG" ] || rmmod pcmcia_core 2>/dev/null
else
echo " ${NORMAL}PCMCIA found, starting cardmgr.${NORMAL}"
insmod ds >/dev/null 2>&1
cardmgr >/dev/null 2>&1
fi
fi

# USB enable

if [ -f /sbin/hotplug ]; then
dummy=""
else
echo " ${NORMAL}The ${RED}hotplug${NORMAL} package is NOT installed!!"
echo " ${NORMAL}Without hotplug USB mice and other USB devices will NOT be detected."
fi

if checkbootparam "nousb"; then
# echo " ${YELLOW}Skipping USB detection as requested on boot commandline.${NORMAL}"
dummy=""
else
# USB/Mouse Check/Setup
# This needs to be done before other modules are being loaded by hwsetup
insmod usbcore  >/dev/null 2>&1
# We now try to load both USB modules, in case someone has 2 different
# controllers
FOUNDUSB=""
for u in usb-uhci usb-ohci; do insmod "$u" >/dev/null 2>&1 && FOUNDUSB="yes"; done
if [ -n "$FOUNDUSB" ]; then
HOTPLUG="yes"
if [ -f /sbin/hotplug ]; then
echo " ${NORMAL}USB found, managed by ${MAGENTA}hotplug${NORMAL}.${NORMAL}"
mount -o devmode=0666 -t usbdevfs none /proc/bus/usb >/dev/null 2>&1
else
dummy=""
fi
fi
fi

# Firewire enable
if checkbootparam "nofirewire"; then
echo " ${YELLOW}Skipping Firewire detection as requested on boot commandline.${NORMAL}"
else
# We now try to load the firewire module
FOUNDFIREWIRE=""
insmod ohci1394 >/dev/null 2>&1 && FOUNDFIREWIRE="yes"
if [ -n "$FOUNDFIREWIRE" ]; then
HOTPLUG="yes"
if [ -f /sbin/hotplug ]; then
echo "${NORMAL}Firewire found, managed by ${MAGENTA}hotplug&{NORMAL}."
else
echo "${NORMAL}Firewire found, but ${RED}hotplug${NORMAL} is NOT installed!!"
echo "${NORMAL}Without hotplug Firewire will not be auto managed."
fi
fi
fi

# Start hotplug manager for PCI/USB/Firewire/Cardbus

if [ -f /sbin/hotplug ]; then
dummy=""
else
echo "${YELLOW}Hotplug not enabled, starting hwsetup: ${NORMAL}"
fi

if [ -n "$HOTPLUG" -a -x /sbin/hotplug-tmp ]; then
if [ -f /sbin/hotplug ]; then
echo "${YELLOW}Enabling ${MAGENTA}hotplug ${YELLOW}manager, starting hwsetup: ${NORMAL}"
echo "/sbin/hotplug-tmp" > /proc/sys/kernel/hotplug
else
dummy=""
fi
fi

# Second: Search & configure supported hardware
echo -n "${YELLOW}"
if hwsetup -p >/dev/null
then
echo -n "${NORMAL}"
else
echo " ${RED}Please check.${NORMAL}"
fi

# Read in what hwsetup has found
[ -f /etc/sysconfig/smgl ] && [ . /etc/sysconfig/smgl ]

# Mouse
if [ -n "$MOUSE_DEVICE" ]
then
echo " ${GREEN}Mouse      : ${NORMAL}${MOUSE_FULLNAME}${GREEN} at ${MAGENTA}${MOUSE_DEVICE}${NORMAL}"
fi

# Soundcard
if [ -n "$SOUND_FULLNAME" -o -n "$SOUND_DRIVER" ]
then
# Setting micro input to zero to avoid subsonic disaster
aumix -m 0 >/dev/null 2>&1
echo -n " ${GREEN}Soundcard  :"
[ -n "$SOUND_FULLNAME" ] && echo -n " ${NORMAL}$SOUND_FULLNAME${NORMAL}"
[ -n "$SOUND_DRIVER" ] && echo -n "${GREEN} driver: ${MAGENTA}$SOUND_DRIVER"
echo "${NORMAL}"
fi

# if checkbootparam noagp; then
# echo " ${GREEN}AGP        : ${NORMAL}Skipping AGP detection as requested on boot commandline.${NORMAL}"
# else
## Probe for AGP. Hope this can fail safely
# stringinfile "AGP" "/proc/pci" 2>/dev/null && insmod agpgart agp_try_unsupported=1 >/dev/null 2>&1 && echo " ${GREEN}AGP        : ${NORMAL}AGP bridge detected."
# fi

# Automatic XFree86 Setup
if [  -a /etc/X11 ]; then
[ -x /usr/sbin/mkxf86config ] && /usr/sbin/mkxf86config
else
echo " ${GREEN}Video      :${RED} XFree86 not installed."
fi

# Read in changes
[ -f /etc/sysconfig/smgl ] && . /etc/sysconfig/smgl

NOSWAP=""
NODMA=""
checkbootparam "noswap" && NOSWAP="yes"
checkbootparam "nodma" && NODMA="yes"

# Scan partitions
 if [ -f /proc/partitions ]; then
 partitions=""
 dma=""
 pold="no_partition"
while read a b c p unused; do
# Workaround for a /proc/partitions bug
 [ "$p" = "$pold" ] && break
 pold="$p"
 case $p in
     ide/host?/bus?/target?/lun0/disc|scsi/host?/bus?/target?/lun0/disc|hd?|sd?)

          # Add entry to /etc/fstab
          partitions="$partitions /dev/$p"
	part=" /mnt/hwd/$p"
          # Enable DMA for IDE harddisks only (Caution: IDE cdroms may cause trouble)
 #        case $p in hd?) [ -n "$NODMA" ] || { /sbin/hdparm -qd1 /dev/$p 2>/dev/null; dma="$dma /dev/$p"; } ;; esac
 	  ;;
 *) ;;
esac
 done < /proc/partitions

 echo " ${GREEN}Hard disk  :${NORMAL}$partitions${NORMAL}"
 if [ -n "$partitions" ]
 then
 LANG=C LC_ALL=C fdisk -l $partitions 2>&1 | \
 awk '/^\/dev\//{print $0}' | \
 while read p d2 d3 d4 d5 t; do
 options="user,exec"
 fnew=""
 case "$t" in *[Ee]xtended*|*[Hh]ibernation*) continue; ;; esac
 case "$t" in *[Ss]wap*)
  if [ -n "$NOSWAP" ]; then
  echo "${YELLOW}Ignoring swap partition ${MAGENTA}$p${YELLOW} as requested.${NORMAL}"
  else
  echo " ${GREEN}Swap       : ${NORMAL}$p${NORMAL}"

 fi
 continue
 ;;
 esac

 done
 fi
 fi

# Deleting XF86Config.hwd (not used in Arch Linux)
rm -f /etc/X11/XF86Config.hwd
# Deleting temporary files
if [  -a /etc/X11 ]; then
rm  /etc/X11/XF86Config-4.in
rm  /etc/X11/XF86Config.in
fi

# No auto XF86Config.... manual setup.
# echo " ${GREEN}XF86Config sample: ${NORMAL}/etc/X11/XF86Config.hwd (-4.hwd)${NORMAL}"

# No auto setup.
# Fat-Client-Version: DHCP Broadcast for IP address
if checkbootparam "nodhcp"; then
# echo " ${BLUE}Skipping DHCP broadcast/network detection as requested on boot commandline.${NORMAL}"
echo " ${YELLOW}Skipping network detection as requested on boot commandline.${NORMAL}"
else
NETDEVICES="$(cat /proc/net/dev 2>/dev/null | awk -F: '/eth.:|tr.:/{print $1}')"
for DEVICE in $NETDEVICES
do
 echo " ${GREEN}Network device: ${MAGENTA}$DEVICE${NORMAL}"
done
fi

###### If Simple mode is selected, no display of devices and modules. #######

if [ -f /tmp/.simple ]; then
echo ""
dummy=""
else
echo ""
echo "${YELLOW}Devices detected... ${NORMAL}"
if [  -a /dev/hda ]; then
dir /dev/h*
fi
if [  -a /dev/sda ]; then
dir /dev/sd*
fi
echo "${YELLOW}Modules detected... ${NORMAL}"
awk '{ printf $1 "  " }' /proc/modules
echo ""
echo ""
fi
##### End of Simple mode. #######

# Module info.
echo "${YELLOW}MANUAL SETUP GUIDE: ${NORMAL}"

# Check /proc/modules with PCMCIA and net modlues.
[ -x /usr/sbin/check_modules ] && /usr/sbin/check_modules

# if [ -a /lib/modules/2.4.20-hwd.w4l ]; then
# echo " ${GREEN}Winmodem and HSP run    : ${NORMAL}'md-install' (if you have)"
# else
# echo " ${GREEN}Winmodem and HSP run    : ${RED}Your kernel doesn't support 'md-install'!!!"
# fi
echo ""

echo " ${GREEN}Load sound module       : ${NORMAL}modprobe $SOUND_DRIVER"

if [  -a /etc/X11 ]; then
echo " ${GREEN}X-window and mice       : ${NORMAL}sample /etc/X11/XF86Config-4.hwd"
echo " ${GREEN}   ..or config/edit run : ${NORMAL}'xf86cfg -textmode'"
else
dummy=""
fi  

if [  -a /dev/input ]; then
echo " ${GREEN}USB mice, printer, etc. : ${NORMAL}modprobe usb-uhci (or usb-ohci)"
fi

if [  -a /dev/sda ]; then
echo " ${GREEN}USB storage, thumb drive: ${NORMAL}modprobe usb-uhci (or usb-ohci), usb-storage"
fi

# Searching standard devices.
if [  -a /dev/hda ]; then
echo " ${GREEN}Mount hdd               : ${NORMAL}mount /dev/hda[x] /mnt/[x]"
else
echo "    ${RED}Untag "old device names" in /etc/devfsd.conf${NORMAL}"
fi
if [  -a /dev/hdb ]; then
echo " ${GREEN}Mount hdd (slave)       : ${NORMAL}mount /dev/hdb /mnt/hdb"
fi
if [  -a /dev/hde ]; then
echo " ${GREEN}Mount flash card, etc.  : ${NORMAL}mount /dev/hde /mnt/hde"
fi
if [ -a /dev/cdrom ]; then
echo " ${GREEN}Mount cdrom             : ${NORMAL}mount /dev/cdroms/cdrom0 /mnt/[x]" 
fi
if [ -a /dev/sr0 ]; then
echo " ${GREEN}Mount cdrom-[rw], usb   : ${NORMAL}mount /dev/sr0 /mnt/[x]" 
fi
if [ -a /dev/sda ]; then
echo " ${GREEN}Mount storage, scsi     : ${NORMAL}mount /dev/sda[x] /mnt/[x]"
fi
echo ""
echo "${NORMAL}(Scroll up press Shift-PgUp)${NORMAL}"

# Re-enable interrupt signals
trap 1 2 3 15

exit 0

#!/bin/bash
#-------------------------------------------------------------------------------
##
##=head1 SYNOPSIS
##
##  liberror is a set of functions and variable definitions used
##  internally by cauldron for error handling and error definitions
##
##=head1 COPYRIGHT
##
##  Copyright 2009 by the Cauldron Team
##
##=head1 FUNCTIONS
##
##=over 4
##
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# ERROR definitions
#-------------------------------------------------------------------------------
# error codes
ERR_OK=0                  # everything is good
ERR_FATAL=1               # fatal error (missing cauldron libs, etc.)

# error messages
ERR_MSGS=(
          "operation succeeded"                 # ERR_OK
          "fatal error"                         # ERR_FATAL
          )

#-------------------------------------------------------------------------------
# Function definitions
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
## @param error name (string)
##
## Checks for an error condition (via $?), and if found it will return an error
## of the specified type (arg1) if given, or of the matching type if no arg was
## given.
##
#-------------------------------------------------------------------------------
function liberror_checkerror() {
  # store the return value to preserve it
  local rc="$?"
  local error="$1"

  if [[ $rc -gt 0 ]]
  then
    if [[ -z $error || $rc -ne ${!error} ]]
    then
      error="$(liberror_geterror $rc)"
    fi
  else
    error="ERR_OK"
  fi
  [[ -z $error ]] && return 1
  echo $error
  return 0
}

#-------------------------------------------------------------------------------
## @param error (int)
##
## Finds a matching error type for the given error number. This is used to get
## an error name from a raw return code, for example.
##
#-------------------------------------------------------------------------------
function liberror_geterror() {
  local error=$(set | grep "ERR_[A-Z]*=$1" | cut -d = -f 1)

  [[ -z $error ]] && return 1
  echo "$error"
  return 0
}

#-------------------------------------------------------------------------------
## @param error name (string)
##
## Prints the corresponding error message for the given error type (string,
## defined in this file, e.g. CERR_ARCHIVE) to STDOUT in the configured error
## message color.
##
#-------------------------------------------------------------------------------
function liberror_printerror() {
  local error=$1
  local errmsg="${ERR_MSGS[${!error}]}"

  # exit if $errmsg not defined
  [[ -z $errmsg ]] && return 1

  if [[ ${!error} -eq 0 ]]
  then
    # print a cauldron OK message
    echo "$MESSAGE_COLOR" "$errmsg" "$DEFAULT_COLOR"
  else
    # print a cauldron error message
    echo "$ERR_COLOR" "error: ${errmsg}!" "$DEFAULT_COLOR"
  fi || return 1

  return 0
}

#-------------------------------------------------------------------------------
##
## This software is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## This software is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this software; if not, write to the Free Software
## Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
##
#-------------------------------------------------------------------------------

# vim:ai:tw=80:tabstop=2:softtabstop=2:shiftwidth=2:expandtab


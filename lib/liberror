#!/bin/bash
#-------------------------------------------------------------------------------
##
##=head1 SYNOPSIS
##
##  liberror is a set of functions and variable definitions used
##  internally by cauldron for error handling and error definitions
##
##=head1 COPYRIGHT
##
##  Copyright 2009 by the Cauldron Team
##
##=head1 FUNCTIONS
##
##=over 4
##
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# Output Stream Definitions
#-------------------------------------------------------------------------------
LIBERR_STDOUT=1
LIBERR_STDERR=2

#-------------------------------------------------------------------------------
# ERROR definitions
#-------------------------------------------------------------------------------
# error codes
ERR_OK=0                  # everything is good
ERR_FATAL=1               # fatal error (missing cauldron libs, etc.)

# error messages
ERR_MSGS=(
          "operation succeeded"                 # ERR_OK
          "fatal error"                         # ERR_FATAL
          )

#-------------------------------------------------------------------------------
# Function definitions
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
## @param error number
## @param output stream (default is 1 [stdout], 2 for stderr)
##
## Prints the corresponding error message for the given error type (number,
## defined as a variable in an errorcodes file, e.g. $ERR_FATAL) to the given
## output stream (defaults to STDOUT) in the configured error message color.
##
## If libcolor is sourced and color is not specifically disabled, then the error
## message will be output in color.
##
#-------------------------------------------------------------------------------
function liberror_print_error() {
  local error=$1
  local errmsg="${ERR_MSGS[${error}]}"
  local output=$2

  # if no 2nd argument, use STDOUT as default
  output=${output:=$LIBERR_STDOUT}

  # exit if $errmsg not defined
  [[ -z "$errmsg" ]] && return 1

  # print an OK message if the "error" is 0, otherwise print an error message
  if [[ "$error" == 0 ]]
  then
    # output using libcolor if available
    if [[ "$(type -t libcolor_notice)" == "function" ]]
    then
      libcolor_notice "$errmsg" >&$output
      echo "" >&$output
    else
      echo "$errmsg" >&$output
    fi
  else
    # output using libcolor if available
    if [[ "$(type -t libcolor_error)" == "function" ]]
    then
      libcolor_error "$errmsg" >&$output
      echo "" >&$output
    else
      echo "$errmsg" >&$output
    fi
  fi || return 1

  return 0
}

#-------------------------------------------------------------------------------
## @param error number
##
## Calls liberror_print_error with the error number passed as the first
## argument, then exits with the same error number. If no error number was
## passed in then the function returns with error rather than exiting.
##
#-------------------------------------------------------------------------------
function liberror_die() {
  local error=$1

  # exit if $errmsg not defined
  [[ -z "$error" ]] && return 1

  # print the corresponding error message on STDERR
  liberror_print_error $error $LIBERR_STDERR

  # die is used for fatal errors, so exit to the parent process rather than
  # returning to the caller
  exit $error
}

#-------------------------------------------------------------------------------
##
## Calls liberror_die if current exit status (from a previous command) holds an
## error. If there's an error, the error is passed to liberror_die. Otherwise,
## it returns $ERR_OK.
##
#-------------------------------------------------------------------------------
function liberror_check_fatal_error() {
  [[ $? ]] && liberror_die $?

  return $ERR_OK
}

#-------------------------------------------------------------------------------
##
## This software is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## This software is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this software; if not, write to the Free Software
## Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
##
#-------------------------------------------------------------------------------

# vim:ai:tw=80:tabstop=2:softtabstop=2:shiftwidth=2:expandtab

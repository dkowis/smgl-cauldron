#!/bin/sh

# Author: Benoit PAPILLAULT <benoit.papillault@free.fr>
# Creation: 24/07/2003

# This script will recompile all the system by using sorcery
# All compilation will be done in a chroot'ed environment
# at work/image-stage3

IMAGE="work/image-stage3"
TOOLS="/tmp/tools2"

# backup downloaded source files
if [ -d "${IMAGE}/var/spool/sorcery" ]; then
    cp "${IMAGE}/var/spool/sorcery"/* work/src
fi

umount "${IMAGE}/proc"
umount "${IMAGE}/dev/pts"
umount "${IMAGE}/dev"
rm -rf "${IMAGE}" &&
mkdir -p "${IMAGE}" &&
(cd work/image-stage2; tar cfl - .) | (cd "${IMAGE}"; tar xfp -) || exit 1

# restore backuped source files
mkdir -p "${IMAGE}/var/spool/sorcery" &&
cp work/src/* "${IMAGE}/var/spool/sorcery"

# copy our script to the chroot'ed environment
mkdir -p "${IMAGE}/tmp" &&
cp mk-image-stage3-bis "${IMAGE}/tmp/mk-image-stage3-bis" &&
chmod a+x              "${IMAGE}/tmp/mk-image-stage3-bis"

# create a link for /bin/sh and /bin/bash
mkdir -p "${IMAGE}/bin" &&
ln -sf bash "${IMAGE}/bin/sh" &&
ln -sf "${TOOLS}/bin/bash" "${IMAGE}/bin/bash"

# copy sorcery/grimoire to the chroot. Those files have been downloaded in
# mk-init

if [ ! -f sorcery-stable.tar.bz2 ]; then
	echo sorcery-stable.tar.bz2 is missing
	exit 1
fi
cp sorcery-stable.tar.bz2 "${IMAGE}/tmp"

if [ ! -f stable.tar.bz2 ]; then
	echo stable.tar.bz2 is missing
	exit 1
fi
cp stable.tar.bz2 "${IMAGE}/tmp"

# copy sorcery patch (if existing)
if [ -f sorcery.diff ]; then
    cp sorcery.diff "${IMAGE}/tmp"
fi

# copy stable grimoire patch (if existing)
if [ -f stable.diff ]; then
	cp stable.diff "${IMAGE}/tmp"
fi

# create the root directory
#mkdir -p ${IMAGE}/root

# we need a working resolv.conf (we take the one from the host system)
mkdir -p "${IMAGE}/etc" &&
cp /etc/resolv.conf "${IMAGE}/etc"

# we create some essential files from the following debian packages:
# - base-passwd : /etc/passwd, /etc/group
# - base-files : /etc/nsswitch.conf
# - netbase : /etc/protocols, /etc/services, /etc/rpc

for file in \
	base-files/passwd \
	base-files/group \
	base-files/nsswitch.conf \
	base-files/protocols \
	base-files/services \
	base-files/rpc \
;
do
  cp "${file}" "${IMAGE}/etc"
done

# copy the kernel configuration
mkdir -p "${IMAGE}/etc/sorcery/local" &&
cp config-2.6.7 "${IMAGE}/etc/sorcery/local/kernel.config" ||
exit -1

# mount /proc & /dev/pts
mkdir -p "${IMAGE}/proc" &&
mount -t proc proc "${IMAGE}/proc"

mkdir -p "${IMAGE}/dev/pts" &&
mount -t devpts devpts "${IMAGE}/dev/pts"

# vital links
(cd "${IMAGE}/dev"; ln -sf /proc/self/fd; \
	ln -sf fd/0 stdin; ln -sf fd/1 stdout; ln -sf fd/2 stderr; \
	mknod null c 1 3)

# run the script inside the chroot
chroot "${IMAGE}" "${TOOLS}/bin/env" -i \
    HOME=/root TERM=$TERM PS1='\u:\w\$ ' \
    PATH="/bin:/sbin:/usr/bin:/usr/sbin:${TOOLS}/bin:${TOOLS}/sbin" \
    /tmp/mk-image-stage3-bis
#    /tmp/tools/bin/bash --login

# umount /proc & /dev/pts
umount "${IMAGE}/dev/pts"
umount "${IMAGE}/proc"

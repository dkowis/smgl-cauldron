#!/bin/bash
#-------------------------------------------------------------------------------
##
##=head1 SYNOPSIS
##
##  This file is the SMGL shell installer.
##  Take care not to pollute the user's namespace too much,
##  And make sure your functions don't collide with existing commands.
##
##=head1 COPYRIGHT
##
##  Copyright 2009 by the Cauldron Team
##
##=head1 FUNCTIONS
##
##=over 4
##
#-------------------------------------------------------------------------------

. "/etc/cauldron/enchant.config"
. "/etc/cauldron/local/enchant.config" 2> /dev/null
. "${ENCHANT_DATA}/libenchantment"

if enchant_color
then
  . "${ENCHANT_BASE}/libcolor" ||
    liberror_print_error $ERR_LIBCOLOR $LIBERR_STDERR
fi

# Ensure installer sanity
enchant_prepare

# print a standardized header
# if given a filename for an argument, it will print the contents of the file
# after the header
function shell_header() {
  echo ""
  echo ""
  echo ""

  # if arg1 supplied, cat it
  [[ -n $1 ]] && cat $1
}

# output the step instructions
# use color if libcolor loaded, else just plain bold
function shell_instructions() {
  local file=$1
  local hilight="${LIBCOLOR_MESSAGE_COLOR:-[1m}"
  local normal="${LIBCOLOR_NORMAL_COLOR:-[0m}"

  sed 's/@\[\([^]]*\)\]/'$hilight'\1'$normal'/g' "$file"
}

# display module names with short descriptions in columns
function shell_modules() {
  local list
  local module
  local col_width=0

  # get the list of modules
  list=( $(enchant_get_modules) )

  # get the width of the widest column
  for col in ${list[*]}
  do
    [[ ${#col} -gt $col_width ]] && col_width=${#col}
  done

  header
  for module in ${list[*]}
  do
    # pad the output to align the columns
    while [[ ${#module} -lt $col_width ]]
    do
      module="$module "
    done

    # output name and info in columns
    echo "$module" | paste - "$ENCHANT_MODULES/${module}.info"
  done
}

function cur_step() {
  enchant_getstep
}

function next() {
  enchant_setnext
  todo
}

function todo() {
  local curstep="$1"
  curstep="${curstep:-$(enchant_getstep)}"

  # output the header
  header

  # output the current module's instructions
  instructions "$ENCHANT_MODULES/$curstep"
}

function next() {
  enchant_set_next
  todo
}

function prev() {
  enchant_set_prev
  todo
}

function back() {
  enchant_back
}

function forward() {
  enchant_forward
}

function jump() {
  local hilight="${LIBCOLOR_MESSAGE_COLOR:-[1m}"
  local normal="${LIBCOLOR_NORMAL_COLOR:-[0m}"

  if ! enchant_set_current $*
  then
    echo ""
    echo -n "'$*': error: "
    liberror_print_error $?

    if [[ $? = $ERR_STEP ]]
    then
      echo "Type ${hilight}steps${normal} to see a list of steps."
    fi
  fi
}

function welcome() {
  header
  instructions "$ENCHANT_MODULES/welcome/welcome"
}

function help() {
  helpfile="$ENCHANT_MODULES/help/${1:-index}"
  if [[ -e $helpfile ]] ;then
    header
    instructions $helpfile
  else
    echo "No installer help for '$1', falling back to bash's builtin help"
    builtin help $1
  fi
}

PS1="[current:\$(cur_step) next:\$(next_step) \$(num_current)/\$(num_steps)] For a list of commands, type [1mhelp[m\n\u \w\$ "

#-------------------------------------------------------------------------------
##
## This software is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## This software is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this software; if not, write to the Free Software
## Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
##
#-------------------------------------------------------------------------------

# vim:ai:tw=80:tabstop=2:softtabstop=2:shiftwidth=2:expandtab

#!/bin/bash
# This file is the main configuration hub for the ISO generation stuff.
# It should remain in sync with version control. For local changes,
# create a file /etc/smgl-isogen.conf and overwrite values there.

# Read local changes
[ -e /etc/smgl-isogen.conf ] && . /etc/smgl-isogen.conf

# Find out what dir the scripts are in
SCRIPTDIR=${0%/*}
if [[ "${SCRIPTDIR:0:1}" != "/" ]] ;then
  SCRIPTDIR=$(pwd)/$SCRIPTDIR # turn into absolute path
fi

# all paths should be absolute
CACHE_DIR=/var/cache/sorcery
STATE_DIR=$SCRIPTDIR/../data
SKELETON=$SCRIPTDIR/../skeleton

ISO_BRANCH=${ISO_BRANCH:-devel}

# Ask sorcery what architecture we're running
# This is used for finding out what name our tarballs have
ARCH=${ARCH:-$(. /etc/sorcery/config ; echo $HOST)}

# Try to figure out what architecture we are
# TODO: This is a hack
ISO_ARCH=${ISO_ARCH:-$(uname -m)}
[[ $ISO_ARCH == ppc ]] || [[ $ISO_ARCH == x86_64 ]] || ISO_ARCH=i486

# Sorcery version, Grimoire version, Kernel version
SVERSION=${SVERSION:-test}
GVERSION=${GVERSION:-test}
KVERSION=${KVERSION:-"2.6"}


# Now, we try to figure out what kernel version we are building for.
# 1. Find kernel config file
kconf=../data/config-$KVERSION.$ISO_ARCH
[[ -e $kconf ]] || kconf=../data/config-$KVERSION
# 2. Extract kernel version that we have a config for
def_kv=$(sed -n 's/^# Linux kernel version: //p' $kconf)

# 3. Set kernel version (unless already set by /etc/smgl-isogen.conf)
KERNEL_VERSION=${KERNEL_VERSION:-$def_kv}

# 4. Figure out kernel major version and patches (for linux.p)
if [[ $KERNEL_VERSION == *.*.*.* ]] ;then
  KERNEL_MVERSION=${KERNEL_MVERSION:-${KERNEL_VERSION%.*}}
  KERNEL_PATCHES=${KERNEL_PATCHES:-"patch-$KERNEL_VERSION"}
else
  KERNEL_MVERSION=${KERNEL_MVERSION:-$KERNEL_VERSION}
fi

# What version should we display on the ISO menus and the .iso filename?
# NOTE: change this for testing/stable ISOs
ISO_VERSION=${ISO_VERSION:-$ISO_BRANCH-$(cat $STATE_DIR/internal_version)}

# The exact filename we'll crank out
ISO_FILENAME="smgl-${ISO_VERSION%%-*}-$ISO_ARCH-$KERNEL_VERSION-nptl-${ISO_VERSION#*-}.iso"

# Try to keep on going during ISO generation even when steps fail?
# Helpful for debugging, disable in test branch
IGNORE_FATAL=${IGNORE_FATAL:-yes}

# What should the dirs used for initrd and ISO be called?
# The ISO source dir will not be removed at the end of generation,
# so you have an easy way to see what's on the ISO, for debugging
INITRDROOT=${INITRDROOT:-/theinitrd}
ISO_DIR=${ISO_DIR:-/iso-root}

# Where to put dynamically-generated files on the ISO.
# Do not change this value, as the installer relies on it being this way.
ISO_STATE_DIR=$ISO_DIR/var/lib/smgl.install

# Finally, source some useful helper functions
. $SCRIPTDIR/misc

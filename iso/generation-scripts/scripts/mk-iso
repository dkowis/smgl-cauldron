#!/bin/sh

# Author : Benoit PAPILLAULT <benoit.papillault@free.fr>
# Creation : 26/05/2003

# Create a bootable CD-ROM from several files:
# - work/initrd.gz : the initial ramdisk
# - work/iso_root  : pre-image of the CDROM's root content
# 

# read common configuration file

. config

# we use $IMAGE if defined, or else work/image
if [ -z "${IMAGE}" ]; then
    IMAGE="work/image-stage3"
fi
echo "using IMAGE=${IMAGE}"

# usefull functions

# usage: spell_versions bash
# returns the grimoire version and the installed version
# you can use it as : 
# grimoire_version=`spell_versions bash | awk '{print $1}'
# installed_version=`spell_versions bash | awk '{print $2}'

spell_versions() {

  local SPELL="$1"
  chroot "${IMAGE}" gaze version "${SPELL}" |
  head -3 | tail -1 | awk '{print $4" "$5}'

}

# usage: installed_version bash
# returns the installed version or "-"

installed_version() {

  local SPELL="$1"
  spell_versions "${SPELL}" | awk '{print $2}'

}

# few definitions

# we use $ARCH if defined, or else we automatically detect the current
# architecture

if [ -z "${ARCH}" ]; then
  case `uname -m` in
	i386|i486|i586|i686)
	  ARCH=i386
	  ;;
	*)
	  ARCH=`uname -m`
	  ;;
  esac
fi
echo "using ARCH=${ARCH}"

ISO="smgl-${ISO_VERSION}-${ARCH}.iso"

# checking image directory
if [ ! -d "${IMAGE}" ]; then
    echo "${IMAGE} is missing"
    exit 1
fi

# checking initrd
if [ ! -f work/initrd.gz ]; then
	echo work/initrd.gz is missing
	exit 1
fi

# checking iso_root
if [ ! -d work/iso_root ]; then
    echo "iso_root is missing"
    exit 1
fi

# umount directories under work/iso_root
DIR=`cd work/iso_root && pwd`
cat /proc/mounts | awk '{print $2}' | grep "^${DIR}" | sort -ur |
while read dir;
do
  echo "umounting ${dir}..."
  umount "${dir}" || exit 1
done || exit 1

# copy bootloader
case "${ARCH}" in
  i386)
  # install isolinux

    FILE="syslinux-${SYSLINUX_VERSION}.tar.bz2"
	URL="http://www.kernel.org/pub/linux/utils/boot/syslinux/${FILE}"

	if [ ! -f "${FILE}" ]; then
		wget -c "${URL}"
	fi

	echo "unpacking ${FILE}"
	if ! tar jxf "${FILE}"; then
		echo "file ${FILE} is corrupted or does not exist"
		echo "try to remove it and try again";
		rm -rf "syslinux-${SYSLINUX_VERSION}"
		exit 1;
	fi

	mkdir -p work/iso_root/isolinux &&
	cp "syslinux-${SYSLINUX_VERSION}/isolinux.bin" work/iso_root/isolinux &&
	rm -rf "syslinux-${SYSLINUX_VERSION}" || exit 1
    ;;

  ppc)
  # install yaboot (the directory containing yaboot should be marked
  # as blessed. it should be a top level directory only).
	mkdir -p work/iso_root/yaboot &&
	cp "${IMAGE}/usr/lib/yaboot/yaboot" work/iso_root/yaboot/yaboot || exit 1
	;;
esac

# copy bootloader configuration

case "${ARCH}" in
  i386)
	mkdir -p work/iso_root/isolinux &&
    cp src/iso_root/isolinux.cfg work/iso_root/isolinux/ &&
	cp src/iso_root/f1.txt work/iso_root/isolinux/ &&
	cp src/iso_root/isolinux.msg work/iso_root/isolinux/ || exit 1
	;;
  ppc)
    mkdir -p work/iso_root/yaboot &&
    cp src/iso_root/ofboot.b work/iso_root/yaboot/ &&
    cp src/iso_root/yaboot.conf work/iso_root/yaboot/ &&
    cp src/iso_root/yaboot.msg work/iso_root/yaboot/ || exit 1
    ;;
  *)
    echo "${ARCH} architecture is not supported"
    exit 1
    ;;
esac

# copy kernel to boot/linux

KERNEL_VERSION=`installed_version linux`
KERNEL_IMAGE="/boot/vmlinux-${KERNEL_VERSION}"
case `uname -m` in
  i386 | i486 | i586 | i686)
    KERNEL_IMAGE="/boot/vmlinubz-${KERNEL_VERSION}"
	;;
esac
if [ ! -f "${IMAGE}/${KERNEL_IMAGE}" ]; then
	echo "kernel image ${KERNEL_IMAGE} is missing"
	exit 1
fi

echo "copying ${KERNEL_VERSION} linux kernel : ${KERNEL_IMAGE}"

mkdir -p work/iso_root/boot &&
cp "${IMAGE}/${KERNEL_IMAGE}" work/iso_root/boot/linux &&
cp "${IMAGE}/etc/sorcery/local/kernel.config" \
    "work/iso_root/boot/config-${KERNEL_VERSION}" || exit 1

# copy initrd to boot/initrd.gz

mkdir -p work/iso_root/boot &&
cp work/initrd.gz work/iso_root/boot/initrd.gz || exit 1

# isolinux will try to boot /boot/linux. We cannot tell isolinux to
# boot /boot/bzImage-2.4.21 since isolinux only support 8.3 filename
# format and no symlinks. Thus, we create a symlink
# "/boot/bzImage-2.4.21 -> /boot/linux" to have the filenames we are
# used to. This is now done in mk-iso-root shell script.

# removing the rr_moved directory
rm -rf work/iso_root/rr_moved

VOLUME_ID="SourceMage ${ISO_VERSION} ${ARCH} CD"

# here is missing an explanation about all mkisofs options used here!
# -b boot/isolinux/isolinux.bin : specify the boot image
# -c boot/isolinux/boot.cat     : specify the boot catalog (it is created)
# -no-emul-boot                 : specify the "no-emulation" boot mode
# -R                            : generate SUSP/RR records for file permissions
# -hfs                          : generate a iso9660/hfs hybrid CD (for apple)
# -part                         : generate a hfs partition table
# -hfs-bless ./yaboot           : 'yaboot' directory is "blessed"

mkdir -p iso

case "${ARCH}" in
  i386)
	(cd work/iso_root && mkisofs \
		-b isolinux/isolinux.bin -c isolinux/boot.cat \
		-no-emul-boot -boot-load-size 4 -boot-info-table \
		-R -o "../../iso/${ISO}" .) 2>&1 | tee iso.log &&
	echo "iso is under iso/${ISO}" &&
	file "iso/${ISO}" || exit 1
	;;

  ppc)
    mkdir -p work/iso_root/yaboot &&
	(cd work/iso_root && mkisofs \
		-hfs -part -map ../../src/iso_root/map.hfs -hfs-bless ./yaboot \
		-hfs-volid "${VOLUME_ID}" -V "${VOLUME_ID}" -no-desktop \
		-R -o "../../iso/${ISO}" .) 2>&1 | tee iso.log &&
	echo "iso is under iso/${ISO}" &&
	file "iso/${ISO}" || exit 1
	;;

  *)
	echo "${ARCH} is not supported yet"
    ;;
esac

# if a burn proff CD burner is blocked burning :
# cdrecord -msinfo will force the CD to be ejected!!!

# to burn without using ide-scsi (it seems to be deprecated):
# cdrecord -dev=/dev/hdc blank=fast
# cdrecord -dev=/dev/hdc -driveropts=burnfree -dao -data my.iso

# the default device can be set in /etc/default/cdrecord
# CDR_DEVICE=/dev/hdc

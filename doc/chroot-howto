Making a chroot, run-down of my regular routines (BearPerson)

This is just a quick writeup of the regular procedures that I
use or used to use when making chroots. None of this is set
in stone, very little of it made for permanent documentation.

=== preliminary ===

--- It takes a chroot to make a chroot ---
Well, not really, but I've found it helpful to use one of our
running chroots to make a new chroot from, since they tend to
be more up-to-date than the main system, and have less libraries
that may mess us up.

So, let's go:
p4 sync, as usual

I usually do:
cp ~isofactory/p4stuff/chrootgen/src/main/chrootgen.sh /opt/chroot
cp -a ~isofactory/p4stuff/chrootgen/data/iso-spells/stable-rc/x86 /opt/chroot/new-config

now edit /opt/chroot/new-config/config/etc/sorcery/local/config
to include LEAPFORWARD_URL and (optionally) PROMPT_DELAY
on ilmy, also edit /opt/chroot/new-config/config/etc/sorcery/local/compile_config
to include MAKE_NJOBS=3

=== generating ===

switch screen to inside-chroot (or chroot into the chroot)
cd /
[scribe add grimoire_for_chroot] (if it isn't in there yet)
./chrootgen.sh --chroot_dir /new-chroot --config_dir /new-config --backup_dir /tmp/backup_configs recreate
[scribe del grimoire_for_chroot]

That should more or less do it, go back out of the chroot
mv /opt/chroot/new-chroot /opt/stable-root (or whatever we want to call it)

=== extra files ==

now, the chroot still doesn't have the crucial /etc files,
nor does it have /dev or /proc, and no sorcery.

What I usually do is (outside of the chroot)
cp -av --reply=no ~isofactory/p4stuff/stable/iso/skeleton/etc/* /opt/stable-root/etc
cp -av ~isofactory/p4stuff/stable/iso/skeleton/etc/shadow /opt/stable-root/etc
cp /etc/resolv.conf /opt/stable-root/etc

This will copy all files that aren't in there yet.
shadow is in there already, but needs to be overwritten by the populated
version.

This has several problems:
* It creates /etc/inittab 'cause a buggy init.d spell didn't install it,
  so it becomes an alien and isn't installed to the ISO-installed system
* Same for several others

Solution a)
carefully look at the list of files that the cp copies and delete
anything that isn't system-critical, especially the inittab

Solution b)
(later, when we have sorcery inside the chroot)
do "gaze alien" inside and remove anything that looks like it ought to
belong to a spell

=== /dev, /proc and /var/spool/sorcery ===
I usually don't bind mount /dev, I do
cd /opt/stable-root/dev
/var/lib/sorcery/codex/*/smgl/init.d/MAKEDEV generic-nopty

mount proc -t proc /opt/stable-root/proc
mkdir -p /opt/stable-root/var/spool/sorcery
mount --bind /var/spool/sorcery /opt/stable-root/var/spool/sorcery

=== sorcery and a grimoire ===

~isofactory/p4stuff/stable/iso/generation-scripts/mkprep /opt/stable-root/root/p4

<inside chroot>
cd /root
tar -xjf sorcery-stable.tar.bz2
cd sorcery
./install
cd ..
rm -r sorcery/
scribe add stable

That ought to be that...

=== making caches ===

<inside chroot>
cd /root/p4/generation-scripts
./first_build

=== misc ===

To update stuff in the chroot, remove
/opt/stable-root/root/sorcery-stable.tar.bz2 and
/opt/stable-root/root/stable.tar.bz2
re-run mkprep
chroot in, run
sorcery update
scribe update
cd /root/p4/generation-scripts
./listparse
./caster $(cat ../data/list.reqd ../data/list.all)

to force rebuild of a spell, do
./caster -c $spell

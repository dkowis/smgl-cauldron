This file should be a quick reference how to use the scripts.

==========Building the chroot==========
(See the end of this document for instruction how to build the chroot manually)
FIXME: verify this works
- take care that //sgl/misc/chrootgen is on your disk somewhere
- run chrootgen/src/main/chrootgen.sh --chroot_dir /opt/chroot \
  --config_dir chrootgen/data/iso-spells/test/x86/test recreate

==========Inserting isogen scripts==========
- sync to //sgl/cauldron/proj/proj2
- (optionally) create or change /etc/smgl-mkiso.conf on the host system
  (outside of the chroot)
  (See file isogen-config in this same dir for more info)
- run proj2/iso/generation-scripts/mkprep /opt/chroot/root/p4

==========Building cache tarballs==========
- chroot to /opt/chroot
- cd /root/p4/generation-scripts
- run ./listparse (only needed once every time after running "mkprep")
- run ./caster $( cat ../data/list.reqd )
- run ./caster $( cat ../data/list.all )
(Messages of spells with "log changed" are interesting for QA, but not fatal
errors)
- Alternatively to the last three commands, you can just run ./first_build

==========Generating the ISO==========
- chroot to /opt/chroot
- cd /root/p4/generation-scripts
- run ./mk-smgl-iso
The ISO should end up in /opt/chroot/smgl-<foo>.iso .

==========END==========

Addendum: short steps to build the CHROOT (manually)

- run "sorcery", go to options
- select the architecture optimizations menu
- then select "strip" and "tiny" as optimizations
- exit options
- go to the bottom of the main menu, "install root"
- set INSTALL_ROOT to some directory, say /opt/chroot
- set STATE_ROOT to the same thing
- exit sorcery
- mkdir -p /opt/chroot
- cast basesystem
- answer defaults to all
- * Note : for x86_64  do Shall the dynamic linker install to /lib (not /lib64) (lib64 purge  part 2 of 2)? [Y]

NOTE: chrootgen.sh will do all this for you, including answering the questions
right if you use the right configset.

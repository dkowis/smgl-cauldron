#!/bin/bash

# command to output text strings (typically echo, output to STDOUT
[[ -n "${CAULDRON_CMD_OUTPUT[@]}" ]] ||
  CAULDRON_CMD_OUTPUT=(
    echo
  )

# command to enter a chroot
[[ -n "${CAULDRON_CMD_CHROOT[@]}" ]] ||
  CAULDRON_CMD_CHROOT=(
    chroot
  )

# command to download a url from the internet
[[ -n "${CAULDRON_CMD_URL_DL[@]}" ]] ||
  CAULDRON_CMD_URL_DL=(
    wget
  )

# command used to generate the final iso media
[[ -n "${CAULDRON_CMD_MKISOFS[@]}" ]] ||
  CAULDRON_CMD_MKISOFS=(
    mkisofs
    -R
    -b isolinux/isolinux.bin
    -c isolinux/boot.cat
    -no-emul-boot
    -boot-load-size 4
    -boot-info-table
    -o "$CAULDRON_ISO_NAME"
    "$CAULDRON_BUILD"
  )

# command to archive the sys package (e.g., tar, cpio, etc.)
[[ -n "${CAULDRON_CMD_ARCHIVE_SYS[@]}" ]] ||
  CAULDRON_CMD_ARCHIVE_SYS=(
    tar
    cf "$CAULDRON_BUILD"/"${CAULDRON_SYS_NAME}.tar"
    -C "$CAULDRON_SYS"
  )

# command used for compressing files
[[ -n "${CAULDRON_CMD_COMPRESS[@]}" ]] ||
  CAULDRON_CMD_COMPRESS=(
    bzip2
  )

# command to unpack a baseroot archive into the cauldron build
[[ -n "${CAULDRON_CMD_TAR[@]}" ]] ||
  CAULDRON_CMD_TAR=(
    tar
  )

# command to unpack a baseroot archive into the cauldron build
[[ -n "${CAULDRON_CMD_TAR_UNPACK[@]}" ]] ||
  CAULDRON_CMD_TAR_UNPACK=(
    tar
    -xf
  )
# command to unpack a sorcery archive into the cauldron build
[[ -n "${CAULDRON_CMD_UNPACK_SORCERY[@]}" ]] ||
  CAULDRON_CMD_UNPACK_SORCERY=(
    "${CAULDRON_CMD_TAR[@]}"
    -C "$CAULDRON_BUILD/usr/src"
    xf
  )

# command to unpack a baseroot archive into the cauldron build
[[ -n "${CAULDRON_CMD_UNPACK_BASEROOT[@]}" ]] ||
  CAULDRON_CMD_UNPACK_BASEROOT=(
    "${CAULDRON_CMD_TAR[@]}"
    -C "$CAULDRON_BUILD/baseroot"
    xf "$CAULDRON_BASEROOT"
  )

# command to unpack a baseroot archive into the cauldron build
[[ -n "${CAULDRON_CMD_UNPACK_BUILD[@]}" ]] ||
  CAULDRON_CMD_UNPACK_BUILD=(
    "${CAULDRON_CMD_TAR[@]}"
    -C "$CAULDRON_BUILD/"
    xf
  )

# command to chmod files
[[ -n "${CAULDRON_CMD_CHMOD[@]}" ]] ||
  CAULDRON_CMD_CHMOD=(
    chmod
  )

# command to make directories
[[ -n "${CAULDRON_CMD_MKDIR[@]}" ]] ||
  CAULDRON_CMD_MKDIR=(
    mkdir
    -p
  )

# command to remove directories
[[ -n "${CAULDRON_CMD_RMDIR[@]}" ]] ||
  CAULDRON_CMD_RMDIR=(
    rmdir
  )

# command to copy
[[ -n "${CAULDRON_CMD_CP[@]}" ]] ||
  CAULDRON_CMD_CP=(
    cp
  )

# command to copy forcefully
[[ -n "${CAULDRON_CMD_CP_FORCE[@]}" ]] ||
  CAULDRON_CMD_CP_FORCE=(
    "${CAULDRON_CMD_CP[@]}"
    -f
  )

# command to copy recursively
[[ -n "${CAULDRON_CMD_CP_RECURSE[@]}" ]] ||
  CAULDRON_CMD_CP_RECURSE=(
    "${CAULDRON_CMD_CP[@]}"
    -r
  )

# command to copy recursively forcefully
[[ -n "${CAULDRON_CMD_CP_RECURSE_FORCE[@]}" ]] ||
  CAULDRON_CMD_CP_RECURSE_FORCE=(
    "${CAULDRON_CMD_CP_RECURSE[@]}"
    -f
  )

# command to copy recursively, preserving as much information as possible
[[ -n "${CAULDRON_CMD_CP_EXACT[@]}" ]] ||
  CAULDRON_CMD_CP_EXACT=(
    "${CAULDRON_CMD_CP[@]}"
    -a --parents
  )

# command to remove files
[[ -n "${CAULDRON_CMD_RM[@]}" ]] ||
  CAULDRON_CMD_RM=(
    rm
  )

# command to remove files forcefully
[[ -n "${CAULDRON_CMD_RM_FORCE[@]}" ]] ||
  eval CAULDRON_CMD_RM_FORCE=(
    "${CAULDRON_CMD_RM[@]}"
    -f
  )

# command to remove files recursively
[[ -n "${CAULDRON_CMD_RM_RECURSE[@]}" ]] ||
  CAULDRON_CMD_RM_RECURSE=(
    "${CAULDRON_CMD_RM[@]}"
    -r
  )

# command to remove files recursively forcefully
[[ -n "${CAULDRON_CMD_RM_RECURSE_FORCE[@]}" ]] ||
  CAULDRON_CMD_RM_RECURSE_FORCE=(
    "${CAULDRON_CMD_RM_RECURSE[@]}"
    -f
  )

[[ -n "${CAULDRON_CMD_SYMLINK[@]}" ]] ||
  CAULDRON_CMD_SYMLINK=(
    ln
    -s
  )

[[ -n "${CAULDRON_CMD_SYMLINK_FORCE[@]}" ]] ||
  CAULDRON_CMD_SYMLINK_FORCE=(
    "${CAULDRON_CMD_SYMLINK[@]}"
    -f
  )

[[ -n "${CAULDRON_CMD_HARDLINK[@]}" ]] ||
  CAULDRON_CMD_HARDLINK=(
    ln
  )

[[ -n "${CAULDRON_CMD_HARDLINK_FORCE[@]}" ]] ||
  CAULDRON_CMD_HARDLINK_FORCE=(
    "${CAULDRON_CMD_HARDLINK[@]}"
    -f
  )

# command to mount a filesystem
[[ -n "${CAULDRON_CMD_MOUNT[@]}" ]] ||
  CAULDRON_CMD_MOUNT=(
    mount
  )

# command to bind-mount a filesystem
[[ -n "${CAULDRON_CMD_MOUNT_BIND[@]}" ]] ||
  CAULDRON_CMD_MOUNT_BIND=(
    "${CAULDRON_CMD_MOUNT[@]}"
    --bind
  )

# command to loop-mount a filesystem
[[ -n "${CAULDRON_CMD_MOUNT_LOOP[@]}" ]] ||
  CAULDRON_CMD_MOUNT_LOOP=(
    "${CAULDRON_CMD_MOUNT[@]}"
    -o loop
  )

# command to unmount a filesystem
[[ -n "${CAULDRON_CMD_UNMOUNT[@]}" ]] ||
  CAULDRON_CMD_UNMOUNT=(
    umount
  )

# command to create the ramdisk filesystem (typically ext2)
[[ -n "${CAULDRON_CMD_MKRDFS[@]}" ]] ||
  CAULDRON_CMD_MKRDFS=(
    mke2fs
  )

# command to compress the iso ramdisk
[[ -n "${CAULDRON_CMD_COMPRESS_RAMDISK[@]}" ]] ||
  CAULDRON_CMD_COMPRESS_RAMDISK=(
    gzip
    -9
  )

# command to dump data
[[ -n "${CAULDRON_CMD_DD[@]}" ]] ||
  CAULDRON_CMD_DD=(
    dd
  )

# command to concatenate a file
[[ -n "${CAULDRON_CMD_CAT[@]}" ]] ||
  CAULDRON_CMD_CAT=(
    cat
  )

# command to package the iso initramfs
[[ -n "${CAULDRON_CMD_MKRAMFS[@]}" ]] ||
  CAULDRON_CMD_MKRAMFS=(
    find * -depth -print \| cpio -H newc -o \| gzip -9c
  )

# command to find files
[[ -n "${CAULDRON_CMD_FIND[@]}" ]] ||
  CAULDRON_CMD_FIND=(
    find
  )

# command to grep a file/stream
[[ -n "${CAULDRON_CMD_GREP[@]}" ]] ||
  CAULDRON_CMD_GREP=(
    grep
  )

# command to grep a file/stream
[[ -n "${CAULDRON_CMD_GREP_QUIET[@]}" ]] ||
  CAULDRON_CMD_GREP_QUIET=(
    grep
    -q
  )

# command to split a text stream by delimiters
[[ -n "${CAULDRON_CMD_CUT[@]}" ]] ||
  CAULDRON_CMD_CUT=(
    cut
  )

# command to awk a file/stream
[[ -n "${CAULDRON_CMD_AWK[@]}" ]] ||
  CAULDRON_CMD_AWK=(
    gawk
  )

# command to sed a file/stream
[[ -n "${CAULDRON_CMD_SED[@]}" ]] ||
  CAULDRON_CMD_SED=(
    sed
  )

# sorcery cast/dispel/rebuild commands
[[ -n "${CAULDRON_CMD_CAST[@]}" ]] ||
  CAULDRON_CMD_CAST=(
    "$CAULDRON_HSORCERY_PATH/cast"
  )
[[ -n "${CAULDRON_CMD_DISPEL[@]}" ]] ||
  CAULDRON_CMD_DISPEL=(
    "$CAULDRON_HSORCERY_PATH/dispel"
  )
[[ -n "${CAULDRON_CMD_REBUILD[@]}" ]] ||
  CAULDRON_CMD_REBUILD=(
    "$CAULDRON_HSORCERY_PATH/sorcery"
    rebuild
  )
[[ -n "${CAULDRON_CMD_GAZE_INSTALLED[@]}" ]] ||
  CAULDRON_CMD_GAZE_INSTALLED=(
    gaze -q installed
  )
# vim:ai:tw=80:tabstop=2:softtabstop=2:shiftwidth=2:expandtab

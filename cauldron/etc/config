#!/bin/bash
             # the user cauldron should run as
             # make sure the user you choose has proper permissions
             # (especially for chrooting)
             CAULDRON_USER="${CAULDRON_USER:-root}"

             # the arch to generate the .iso for
             CAULDRON_ARCH="${CAULDRON_ARCH:-x86}"

         # filename of the produced .iso (should follow Cauldron naming conventions)
         CAULDRON_ISO_NAME="${CAULDRON_ISO_NAME:-smgl-devel-$(date +%Y%m%d).$CAULDRON_ARCH}"

            # the version of the kernel to be used in the .iso
	    # if empty, then it will default to the version in cauldron
            CAULDRON_KVERS="${CAULDRON_KVERS:-}"

            # whether CAULDRON_BUILD should be rm'ed after cauldron has finished
            CAULDRON_CLEAN="${CAULDRON_CLEAN:-no}"

          # do we keep the uncompressed .iso file in addition to the compressed one?
          CAULDRON_KEEPISO="${CAULDRON_KEEPISO:-yes}"

            # whether to use color for displaying messages
            CAULDRON_COLOR="${CAULDRON_COLOR:-yes}"

   # branch of sorcery to use in the ISO
   CAULDRON_SORCERY_BRANCH="${CAULDRON_SORCERY_BRANCH:-stable}"
      # branch of sorcery to use in the ISO
      CAULDRON_SORCERY_PKG="${CAULDRON_SORCERY_PACKAGE:-sorcery-${CAULDRON_SORCERY_BRANCH}.tar.bz2}"
      # URL to download sorcery from
      CAULDRON_SORCERY_URL="${CAULDRON_SORCERY_URL:-http://download.sourcemage.org/sorcery/}"

       # list of installers to include in the ISO
       CAULDRON_INSTALLERS=(
                           "shell"
                           # "menu"
                           )

       # whether cauldron should try it's hardest to generate needed spell
       # caches, even if that means casting and dispelling extra spells in a
       # chroot (only used when generating the base toolchain)
       CAULDRON_AGGRESSIVE="${CAULDRON_AGGRESSIVE:-yes}"


             # path to the host system (null for normal use)
             CAULDRON_HOST="${CAULDRON_HOST:-}"
             # path to the host base library modules
             CAULDRON_BASE="${CAULDRON_BASE:-$CAULDRON_HOST/usr/share/smgl}"
             # path to the host cauldron library modules
             CAULDRON_LIBS="${CAULDRON_LIBS:-$CAULDRON_BASE/cauldron}"
             # path to the host cauldron configs
             CAULDRON_DATA="${CAULDRON_DATA:-$CAULDRON_HOST/etc/cauldron}"

              # temporary files generated while cauldron does its work
              CAULDRON_TMP="${CAULDRON_TMP:-$CAULDRON_HOST/tmp/cauldron}"
            # path to the ISO build chroots
            CAULDRON_BUILD="${CAULDRON_BUILD:-$CAULDRON_TMP/build}"
              # path where the final ISO product is generated
              CAULDRON_ISO="${CAULDRON_ISO:-$CAULDRON_TMP/iso}"
              # path where the installable system chroot is generated
              CAULDRON_SYS="${CAULDRON_SYS:-$CAULDRON_TMP/sys}"

        # file listing all the spells needed for the build toolchain
        CAULDRON_TOOLCHAIN="${CAULDRON_TOOLCHAIN:-$CAULDRON_DATA/$CAULDRON_ARCH/toolchain}"

        # kernel config used to build the kernel for the ISO
        CAULDRON_KERN_CONF="${CAULDRON_KERN_CONF:-$CAULDRON_DATA/$CAULDRON_ARCH/kernel}"

        # busybox config used to build busybox for the initrd/initramfs in the ISO
        CAULDRON_BBOX_CONF="${CAULDRON_BBOX_CONF:-$CAULDRON_DATA/$CAULDRON_ARCH/initfs/busybox}"

       # file listing all the spells to compose the ISO runtime
       CAULDRON_ISO_SPELLS="${CAULDRON_ISO_SPELLS:-$CAULDRON_DATA/$CAULDRON_ARCH/iso.spells}"
      # file listing all the sources to supply in the ISO runtime
      CAULDRON_ISO_SOURCES="${CAULDRON_ISO_SOURCES:-$CAULDRON_DATA/$CAULDRON_ARCH/iso.sources}"
       # file listing all the spell caches to supply in the ISO runtime
       CAULDRON_ISO_CACHES="${CAULDRON_ISO_CACHES:-$CAULDRON_DATA/$CAULDRON_ARCH/iso.caches}"

       # file listing all the spells to compose the SYS runtime
       CAULDRON_SYS_SPELLS="${CAULDRON_SYS_SPELLS:-$CAULDRON_DATA/$CAULDRON_ARCH/sys.spells}"
      # file listing all the sources to supply in the SYS runtime
      CAULDRON_SYS_SOURCES="${CAULDRON_SYS_SOURCES:-$CAULDRON_DATA/$CAULDRON_ARCH/sys.sources}"
       # file listing all the spell caches to supply in the SYS runtime
       CAULDRON_SYS_CACHES="${CAULDRON_SYS_CACHES:-$CAULDRON_DATA/$CAULDRON_ARCH/sys.caches}"

       # command to enter a chroot
       CAULDRON_CHROOT_CMD=( "${CAULDRON_CHROOT_CMD[@]:-chroot}" )

       # command to download a url from the internet
       CAULDRON_URL_DL_CMD=( "${CAULDRON_URL_DL_CMD[@]:-wget}" )

     # sorcery cast/dispel/rebuild commands
     CAULDRON_SORCERY_PATH="${CAULDRON_SORCERY_PATH:-$CAULDRON_HOST/usr/sbin}"
             CAULDRON_CAST="${CAULDRON_CAST:-$CAULDRON_SORCERY_PATH/cast}"
           CAULDRON_DISPEL="${CAULDRON_DISPEL:-$CAULDRON_SORCERY_PATH/dispel}"
          CAULDRON_REBUILD="${CAULDRON_REBUILD:-$CAULDRON_SORCERY_PATH/sorcery rebuild}"

    # sorcery modules location in the ISO
    CAULDRON_ISORCERY_LIBS="${CAULDRON_ISORCERY_LIBS:-$CAULDRON_BUILD/var/lib/sorcery/modules}"
  # sorcery config location in the ISO
  CAULDRON_ISORCERY_CONFIG="${CAULDRON_ISORCERY_CONFIG:-$CAULDRON_BUILD/etc/sorcery/config}"
 # sorcery local config location in the ISO
 CAULDRON_ISORCERY_LCONFIG="${CAULDRON_ISORCERY_LCONFIG:-$CAULDRON_BUILD/etc/sorcery/local/config}"

  CAULDRON_HSORCERY_CONFIG="${CAULDRON_HSORCERY_CONFIG:-$CAULDRON_HOST/etc/sorcery/config}"
 CAULDRON_HSORCERY_LCONFIG="${CAULDRON_HSORCERY_LCONFIG:-$CAULDRON_HOST/etc/sorcery/local/config}"
    CAULDRON_HSORCERY_LIBS="${CAULDRON_HSORCERY_LIBS:-$CAULDRON_HOST/var/lib/sorcery/modules}"
CAULDRON_HSORCERY_PACKAGES="${CAULDRON_HSORCERY_PACKAGES:-$CAULDRON_HOST/var/state/sorcery/packages}"
   CAULDRON_HSORCERY_SPOOL="${CAULDRON_HSORCERY_SPOOL:-$CAULDRON_HOST/var/spool/sorcery}"

      # contains the arch info for the HOST
      CAULDRON_HOST_TRIPLE="${CAULDRON_HOST_TRIPLE:-}"
   CAULDRON_HOST_ARCH_PATH="$(grep 'ARCH_SPECS=' $CAULDORN_HSORCERY_CONFIG | cut -d= -f2)"
        CAULDRON_HOST_ARCH="$(grep 'ARCHITECTURE=' $CAULDORN_HSORCERY_CONFIG | cut -d= -f2)"
  CAULDRON_CACHE_EXTENSION="$(grep 'EXTENSION=' $CAULDORN_HSORCERY_CONFIG | cut -d= -f2)"


# vim:ai:tw=80:tabstop=2:softtabstop=2:shiftwidth=2:expandtab

# path to the host system (null for normal use)
             HOST_PATH="${HOST_PATH:-}"
# path to the ISO system (this should usually be null, unless
# you are doing some tricky hacking)
              ISO_PATH="${ISO_PATH:-}"
# path to the base library modules
         CAULDRON_BASE="${CAULDRON_BASE:-$HOST_PATH/var/lib/cauldron}"
# path to the cauldron library modules
         CAULDRON_LIBS="${CAULDRON_LIBS:-$CAULDRON_BASE/cauldron}"
# path to the cauldron configs
         CAULDRON_DATA="{$CAULDRON_DATA:-$HOST_PATH/etc/cauldron}"
# path to where the ISO build chroot is/will go
        CAULDRON_BUILD="${CAULDRON_BUILD:-$HOST_PATH/tmp/cauldron}"
# temporary files generated while cauldron does its work
          CAULDRON_TMP="${CAULDRON_TMP:-$CAULDRON_BUILD/tmp}"
# should point to a file listing all the spells needed for the toolchain
    CAULDRON_TOOLCHAIN="${CAULDRON_TOOLCHAIN:-$CAULDRON_DATA/$CAULDRON_ARCH/toolchain}"
# should point to a file listing all the spells needed for the ISO runtime
       CAULDRON_SPELLS="${CAULDRON_SPELLS:-$CAULDRON_DATA/$CAULDRON_ARCH/spells}"
# should point to a file listing all the spells needed for the ISO runtime
      CAULDRON_SOURCES="${CAULDRON_SPELLS:-$CAULDRON_DATA/$CAULDRON_ARCH/sources}"
# should point to a file listing all the spells needed for the ISO runtime
       CAULDRON_CACHES="${CAULDRON_SPELLS:-$CAULDRON_DATA/$CAULDRON_ARCH/caches}"
# the arch to generate the ISO for
         CAULDRON_ARCH="${CAULDRON_ARCH:-x86}"
# what the ISO will be called (should follow the ISO naming conventions)
              SMGL_ISO="${SMGL_ISO:-smgl-devel-$(date +%Y%m%d).$CAULDRON_ARCH}"
# the name of the kernel to be used in the ISO
        CAULDRON_KVERS="${CAULDRON_KVERS:-}"
# contains the arch info for the HOST
           HOST_TRIPLE="${HOST_TRIPLE:-}"
# whether CAULDRON_BUILD should be rm'ed after cauldron has finished
        CAULDRON_CLEAN="${CAULDRON_CLEAN:-no}"
# do we keep the uncompressed .iso file in addition to the compressed one?
      CAULDRON_KEEPISO="${CAULDRON_KEEPISO:-yes}"
# branch of sorcery to use in the ISO
    ISO_SORCERY_BRANCH="${ISO_SORCERY_BRANCH:-stable}"
# sorcery local config location in the ISO
    ISO_SORCERY_CONFIG="${ISO_SORCERY_CONFIG:-$CAULDRON_BUILD/etc/sorcer/local/config}"

 CAULDRON_SORCERY_PATH="${CAULDRON_SORCERY_PATH:-$HOST_PATH/usr/sbin}"
         CAULDRON_CAST="${CAULDRON_CAST:-$CAULDRON_SORCERY_PATH/cast}"
       CAULDRON_DISPEL="${CAULDRON_DISPEL:-$CAULDRON_SORCERY_PATH/dispel}"
      CAULDRON_REBUILD="${CAULDRON_REBUILD:-$CAULDRON_SORCERY_PATH/sorcery rebuild}"

   CAULDRON_CHROOT_CMD="${CAULDRON_CHROOT_CMD:-chroot}"

# whether to use color for displaying messages
        CAULDRON_COLOR="${CAULDRON_COLOR:-yes}"

 CAULDRON_SORCERY_LIBS="${CAULDRON_SORCERY_LIBS:-$CAULDRON_BUILD/var/lib/sorcery/modules}"
        SORCERY_CONFIG="${SORCERY_CONFIG:-$HOST_PATH/etc/sorcery/config}"
   HOST_SORCERY_CONFIG="${HOST_SORCERY_CONFIG:-$HOST_PATH/etc/sorcery/config}"
  HOST_SORCERY_LCONFIG="${HOST_SORCERY_LCONFIG:-$HOST_PATH/etc/sorcery/local/config}"
     HOST_SORCERY_LIBS="${SORCERY_LIBS:-$HOST_PATH/var/lib/sorcery/modules}"
 HOST_SORCERY_PACKAGES="${HOST_SORCERY_PACKAGES:-$HOST_PATH/var/state/sorcery/packages}"
    HOST_SORCERY_SPOOL="${HOST_SORCERY_SPOOL:-$HOST_PATH/var/spool/sorcery}"

        HOST_ARCH_PATH=$(grep "ARCH_SPEC=" ${SORCERY_CONFIG} | \
                         cut -d = -f 2)
             HOST_ARCH=$(grep "ARCHITECTURE=" ${HOST_SORCERY_CONFIG} | \
                         cut -d = -f 2)
       CACHE_EXTENSION=$(grep "EXTENSION=" ${HOST_SORCERY_CONFIG} | \
                         cut -d = -f 2)


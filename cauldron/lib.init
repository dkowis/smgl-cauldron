#!/bin/bash
#-------------------------------------------------------------------------------
##
##=head1 SYNOPSIS
##
##  libinit is a set of functions used internally by the cauldron scripts
##  responsible for handling the init setup, including initrd and initramfs, on
##  the ISOs.
##
##=head1 COPYRIGHT
##
##  Copyright 2009 by the Cauldron Team
##
##=head1 FUNCTIONS
##
##=over 4
##
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
## @param XXX
##
## Handles setting up the init process on the ISO. The ISO init is
## responsible for detecting hardware, loading device drivers, setting
## console fonts, etc.
##
#-------------------------------------------------------------------------------
function cauldron_iso_init() {
  cp "$CAULDRON_DATA/inittab" "$CAULDRON_BUILD/etc/inittab"
}

#-------------------------------------------------------------------------------
## @param XXX
##
## Makes the initrd to be used by the ISO on booting.
##
#-------------------------------------------------------------------------------
function cauldron_ramdisk() {
  local initrd="${CAULDRON_TEMP}/initrd"
  local initmnt="${CAULDRON_TEMP}/initrd_mount"

  mkdir -p "$initmnt"
  dd '-if' /dev/null '-of' "$initrd"
  mke2fs "$initrd"
  mount -o loop "$initrd" "$initmnt"
  cauldron_initfs "$initmnt"
  umount "$initmnt"
  gzip -9 "$initrd"
}

#-------------------------------------------------------------------------------
## @param XXX
##
## Makes the initramfs be used by the ISO on booting.
##
#-------------------------------------------------------------------------------
function cauldron_ramfs() {
  local ramdir="$CAULDRON_TEMP/initram"
  local ramfs="$CAULDRON_TEMP/initram.cpio"

  mkdir -p "$ramdir"
  cauldron_initfs "$ramdir"
  (
    cd "$ramdir"
    find . -print -depth | cpio -o > "$ramfs"
    gzip -9 "$ramfs"
  )
}

#-------------------------------------------------------------------------------
## @param path_to_initfs
##
## Sets up the basic directories that will be needed on the initfs
##
#-------------------------------------------------------------------------------
function cauldron_initfs_dirs() {
  local initfs="$1"

  for dir in $(cat "$CAULDRON_DATA/initfs.dirs")
  do
    mkdir -p "$initfs/$dir"
  done
}

#-------------------------------------------------------------------------------
## @param path_to_initfs
##
## Gathers and copies the necessary binaries into the initfs
##
#-------------------------------------------------------------------------------
function cauldron_initfs_bins() {
  local initfs="$1"

  for bin in $(cat "$CAULDRON_DATA/initfs.binaries")
  do
    cp "$bin" "$initfs/bin"
  done
}

#-------------------------------------------------------------------------------
## @param path_to_initfs
##
## Gathers and copies the necessary libraries into the initfs
##
#-------------------------------------------------------------------------------
function cauldron_initfs_libs() {
  local initfs="$1"

  for lib in $(cat "$CAULDRON_DATA/initfs.libs")
  do
    cp "$lib" "$initfs/lib/"
  done
}

#-------------------------------------------------------------------------------
## @param path_to_initfs
##
## Copies over any required kernel modules into the initfs
##
#-------------------------------------------------------------------------------
function cauldron_initfs_mods() {
  local initfs="$1"

  for module in $(cat "$CAULDRON_DATA/initfs.modules")
  do
    cp "$module" "$initfs/lib/modules/$CAULDRON_KVERS"
  done
}

#-------------------------------------------------------------------------------
## @param path_to_initfs
##
## Sets up the "init" in the initfs (AKA linuxrc)
##
#-------------------------------------------------------------------------------
function cauldron_initfs_init() {
  local initfs="$1"

  cp "$CAULDRON_DATA/initfs.init" "$initfs/linuxrc"
}

#-------------------------------------------------------------------------------
## @param path_to_initfs
##
## Builds a "filesystem" to be used in an initrd or initramfs
##
#-------------------------------------------------------------------------------
function cauldron_initfs() {
  local initfs="$1"

  cauldron_initfs_dirs "$initfs"
  cauldron_initfs_bins "$initfs"
  cauldron_initfs_libs "$initfs"
  cauldron_initfs_mods "$initfs"
  cauldron_initfs_init "$initfs"
}

#-------------------------------------------------------------------------------
##
## This software is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## This software is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this software; if not, write to the Free Software
## Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
##
#-------------------------------------------------------------------------------

# vim:ai:tw=80:tabstop=2:softtabstop=2:shiftwidth=2:expandtab

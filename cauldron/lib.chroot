#!/bin/bash
#-------------------------------------------------------------------------------
##
##=head1 SYNOPSIS
##
##  libcauldron is a set of functions used internally by the cauldron script
##
##=head1 COPYRIGHT
##
##  Copyright 2009 by the Cauldron Team
##
##=head1 FUNCTIONS
##
##=over 4
##
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
## @param target dir to chroot into
##
## Prepares a chroot environment and exports necessary variables. For every
## target dir to chroot into, there should be one
## [cauldron_chroot_init ... cauldron_chroot_done] pair.
##
#-------------------------------------------------------------------------------
function cauldron_chroot_init() {
  if [[ "$CAULDRON_CHROOTINIT" -ne 1 ]]
  then
    local target="${1:-$CAULDRON_BUILD}"

    # if target is somehow null, return an error
    if [[ -z "$target" ]]
    then
      return $ERR_CHROOT_UNDEF
    fi

    # bind the needed mounts
    mount --bind "$CAULDRON_HOST/dev" "$target/dev" ||
      return $ERR_CHROOT_INIT
    mount --bind "$CAULDRON_HOST/dev/pts" "$target/dev/pts" ||
      return $ERR_CHROOT_INIT
    mount --bind "$CAULDRON_HOST/proc" "$target/proc" ||
      return $ERR_CHROOT_INIT

    # make sure the sorcerous library is loaded
    # which provides cauldron_source_sorcery
    if [[ -z cauldron_source_sorcery ]]
    then
      cauldron_load_library lib.sorcerous
    fi
    # source the target sorcery, so we have access to its functions
    cauldron_sorcerous_load "$target" || return $ERR_SORCEROUS_TARGET_SORCERY

    # everything went OK, so export the chroot definitions
    export CAULDRON_CHROOTINIT=1
    export CAULDRON_CHROOT="$CAULDRON_CHROOT_CMD \"$target\""
  fi

  return $ERR_OK
}

#-------------------------------------------------------------------------------
##
## Cleans up the chroot environment after it is no longer needed
##
#-------------------------------------------------------------------------------
function cauldron_chroot_done() {
  if [[ "$CAULDRON_CHROOTINIT" -eq 1 ]]
  then
    local target="${1:-$CAULDRON_BUILD}"

    # if target is somehow null, return an error
    if [[ -z "$target" ]]
    then
      return $ERR_CHROOT_UNDEF
    fi

    # unmount the bind mounts
    umount "target"/proc || return $ERR_CHROOT_DONE
    umount "target"/dev/pts || return $ERR_CHROOT_DONE
    umount "target"/dev || return $ERR_CHROOT_DONE

    # clear the chroot definitions
    unset CAULDRON_CHROOTINIT
    unset CAULDRON_CHROOT
  fi

  return $ERR_OK
}

#-------------------------------------------------------------------------------
## @param command plus args to execute inside the chroot
##
## Executes the command given as the first parameter and any args that follow
## inside the cauldron chroot defined by cauldron_chroot_init.
##
#-------------------------------------------------------------------------------
function cauldron_chroot() {
  if [[ "$CAULDRON_CHROOTINIT" -eq 1 ]]
  then
    "$CAULDRON_CHROOT" $* || return $ERR_CHROOT_EXEC
  else
    return $ERR_CHROOT_NOT_INIT
  fi

  return $ERR_OK
}

#-------------------------------------------------------------------------------
##
## This software is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## This software is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this software; if not, write to the Free Software
## Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
##
#-------------------------------------------------------------------------------

# vim:ai:tw=80:tabstop=2:softtabstop=2:shiftwidth=2:expandtab
